version: '3'
services:

  nginx-rev-proxy-setup:
    image: debian:stable-slim
    command: /tmp/nginx-rev-proxy-setup.sh
    volumes:
      - /usr/local/bin/docker:/usr/bin/docker
      - /var/run/docker.sock:/var/run/docker.sock
      - ./scripts/nginx-rev-proxy-setup.sh:/tmp/nginx-rev-proxy-setup.sh:ro

  redis:
    hostname: redis
    image: redis
    restart: always
    networks:
      default:
        aliases:
          - redis.internal

  db:
    hostname: db
    image: pmetpublic/lamp-db-server:no-password
    restart: always
    ports:
      - 3306
    volumes:
      - /data
    networks:
      default:
        aliases:
          - database.internal

  varnish:
    hostname: varnish
    image: pmetpublic/varnish
    restart: always
    # https://github.com/magento/magento2/issues/3897
    command: -f /etc/varnish/default.vcl -p feature=+esi_ignore_https
    ports:
      - 80
    volumes:
      - ./etc/varnish:/etc/varnish
    networks:
      default:
        aliases:
          - varnish.internal

  mq:
    hostname: mq
    image: rabbitmq:5.2.12
    restart: always
    networks:
      default:
        aliases:
          - mq.internal

  elasticsearch:
    hostname: elasticsearch
    image: pmetpublic/docker-elasticsearch:for-smile
    restart: always
    networks:
      default:
        aliases:
          - elasticsearch.internal

  app:
      container_name: ${mhost}
      hostname: ${mhost}
      image: pmetpublic/lamp-app-server:with-blackfire
      restart: always
      environment:
#        - COMPOSER_AUTH=${COMPOSER_AUTH}
#        - ENABLE_XDEBUG=${ENABLE_XDEBUG}
#        - ENABLE_DI_COMPILE=${ENABLE_DI_COMPILE}
#        - GMAIL_USERNAME_FOR_SSMTP=${GMAIL_USERNAME_FOR_SSMTP}
#        - GMAIL_PASSWORD_FOR_SSMTP=${GMAIL_PASSWORD_FOR_SSMTP}
        - MAGENTO_CLOUD_RELATIONSHIPS=${MAGENTO_CLOUD_RELATIONSHIPS}
        - MAGENTO_CLOUD_VARIABLES=${MAGENTO_CLOUD_VARIABLES}
        - MAGENTO_CLOUD_ROUTES=${MAGENTO_CLOUD_ROUTES}
        - MAGENTO_CLOUD_BRANCH=${MAGENTO_CLOUD_BRANCH}
        - MAGENTO_CLOUD_TREE_ID=${MAGENTO_CLOUD_TREE_ID}
        - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
        - HOME=/app
      ports:
        - 80
      working_dir: /app
      volumes:
        # - ${HOME}/.composer:${HOME}/.composer
        # - ./etc/cron.d/magento:/etc/cron.d/magento
        - ./etc/apache2/sites-enabled:/etc/apache2/sites-enabled
        # map php ini settings to cli and apache dirs
        - ./etc/php/apache2.ini:/etc/php/7.0/apache2/conf.d/apache2.ini
        - ./etc/php/cli.ini:/etc/php/7.0/cli/conf.d/cli.ini
        - ./etc/php/opcache.ini:/etc/php/7.0/cli/conf.d/opcache.ini
        - ./etc/php/opcache.ini:/etc/php/7.0/apache2/conf.d/opcache.ini
        - ./etc/php/blackfire.ini:/etc/php/7.0/apache2/conf.d/blackfire.ini
        - ./etc/php/blackfire.ini:/etc/php/7.0/cli/conf.d/blackfire.ini
        - ./etc/php/xdebug.ini:/etc/php/7.0/apache2/conf.d/xdebug.ini
        - ./etc/php/xdebug.ini:/etc/php/7.0/cli/conf.d/xdebug.ini
        - ./etc/blackfire/agent:/etc/blackfire/agent
        - "mynfs:/app"
        - /dev/null:/usr/sbin/ssmtp
        - /app/generated
        - /app/static
        - /app/var
      networks:
        default:
          aliases:
            - app.internal
      cap_add:
        - ALL

volumes:
  mynfs:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3,noatime,nodiratime,relatime
      device: ":${PWD}"
