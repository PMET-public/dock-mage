version: '3'
services:

  nginx-proxy:
    image: pmetpublic/nginx
    restart: always
    #entrypoint: env-subst.sh -- /docker-entrypoint.sh
#    ports:
#      - 80:80
#      - 443:443
    environment:
      - TLD=${TLD}
      - DOMAIN=${DOMAIN}
    volumes:
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/ssl:/etc/ssl:ro
      - ./scripts:/usr/local/bin:ro

  redis:
    image: redis
    restart: always
    networks:
      default:
        aliases:
          - redis.internal

  db:
    image: pmetpublic/lamp-db-server:no-password
    restart: always
    environment:
      - DATA_DIR=${DATA_DIR}
    ports:
      - 3306
    volumes:
      - /data
    networks:
      default:
        aliases:
          - database.internal

  varnish:
    image: pmetpublic/varnish
    restart: always
    # https://github.com/magento/magento2/issues/3897
    command: -f /etc/varnish/default.vcl -p feature=+esi_ignore_https
    volumes:
      - ./etc/varnish:/etc/varnish
    networks:
      default:
        aliases:
          - varnish.internal

  mq:
    image: rabbitmq:3.6.12
    restart: always
    networks:
      default:
        aliases:
          - mq.internal

  elasticsearch:
    image: pmetpublic/docker-elasticsearch:for-smile
    restart: always
    networks:
      default:
        aliases:
          - elasticsearch.internal

  m2-app-server:
      image: ${APP_SERVICE_IMAGE}
      restart: always
      command: wait-for-it.sh database.internal:3306 -- /sbin/my_init
      #command: /bin/bash
      environment:
        - TLD=${TLD}
        - DOMAIN=${DOMAIN}
        - GITHUB_TOKEN=${GITHUB_TOKEN}
        - MAGENTO_HOSTNAME=${CONTAINER_NAME}.${DOMAIN}.${TLD}
#        - COMPOSER_AUTH=${COMPOSER_AUTH}
        - LANG_TO_DEPLOY=${LANG_TO_DEPLOY}
#        - WARM_CACHE=${WARM_CACHE}
#        - MAGE_MODE=${MAGE_MODE}
#        - ENABLE_XDEBUG=${ENABLE_XDEBUG}
#        - ENABLE_DI_COMPILE=${ENABLE_DI_COMPILE}
        - XDEBUG_IDEKEY=${XDEBUG_IDEKEY}
        - XDEBUG_REMOTE_HOST=${XDEBUG_REMOTE_HOST}
        - GMAIL_USERNAME_FOR_SSMTP=${GMAIL_USERNAME_FOR_SSMTP}
        - GMAIL_PASSWORD_FOR_SSMTP=${GMAIL_PASSWORD_FOR_SSMTP}
        - ENCRYPTION_KEY=${ENCRYPTION_KEY}
        - BLACKFIRE_CLIENT_ID=${BLACKFIRE_CLIENT_ID}
        - BLACKFIRE_CLIENT_TOKEN=${BLACKFIRE_CLIENT_TOKEN}
        - BLACKFIRE_SERVER_ID=${BLACKFIRE_SERVER_ID}
        - BLACKFIRE_SERVER_TOKEN=${BLACKFIRE_SERVER_TOKEN}
        # for compatability with MECE
        # encode: echo '{"json": "string"}' | base64
        # decode: php -r 'print_r(json_decode(base64_decode($_ENV["MAGENTO_CLOUD_RELATIONSHIPS"]))->database);'
        # '{"redis": [{"service": "redis", "ip": "248.0.144.109", "cluster": "xf6pteamwisvy-master", "host": "redis.internal", "rel": "redis", "scheme": "redis", "port": 6379}], "elasticsearch": [{"service": "elasticsearch", "ip": "248.0.145.37", "cluster": "xf6pteamwisvy-master", "host": "elasticsearch.internal", "rel": "elasticsearch", "scheme": "http", "port": 9200}], "mq": [{"username": "guest", "password": "guest", "service": "myrabbitmq", "ip": "248.0.144.110", "cluster": "xf6pteamwisvy-master", "host": "mq.internal", "rel": "rabbitmq", "scheme": "amqp", "port": 5672}], "database": [{"username": "user", "scheme": "mysql", "service": "mysql", "ip": "248.0.144.111", "cluster": "xf6pteamwisvy-master", "host": "database.internal", "rel": "mysql", "path": "main", "query": {"is_master": true}, "password": "", "port": 3306}]}'
        - MAGENTO_CLOUD_RELATIONSHIPS=eyJyZWRpcyI6IFt7InNlcnZpY2UiOiAicmVkaXMiLCAiaXAiOiAiMjQ4LjAuMTQ0LjEwOSIsICJjbHVzdGVyIjogInhmNnB0ZWFtd2lzdnktbWFzdGVyIiwgImhvc3QiOiAicmVkaXMuaW50ZXJuYWwiLCAicmVsIjogInJlZGlzIiwgInNjaGVtZSI6ICJyZWRpcyIsICJwb3J0IjogNjM3OX1dLCAiZWxhc3RpY3NlYXJjaCI6IFt7InNlcnZpY2UiOiAiZWxhc3RpY3NlYXJjaCIsICJpcCI6ICIyNDguMC4xNDUuMzciLCAiY2x1c3RlciI6ICJ4ZjZwdGVhbXdpc3Z5LW1hc3RlciIsICJob3N0IjogImVsYXN0aWNzZWFyY2guaW50ZXJuYWwiLCAicmVsIjogImVsYXN0aWNzZWFyY2giLCAic2NoZW1lIjogImh0dHAiLCAicG9ydCI6IDkyMDB9XSwgIm1xIjogW3sidXNlcm5hbWUiOiAiZ3Vlc3QiLCAicGFzc3dvcmQiOiAiZ3Vlc3QiLCAic2VydmljZSI6ICJteXJhYmJpdG1xIiwgImlwIjogIjI0OC4wLjE0NC4xMTAiLCAiY2x1c3RlciI6ICJ4ZjZwdGVhbXdpc3Z5LW1hc3RlciIsICJob3N0IjogIm1xLmludGVybmFsIiwgInJlbCI6ICJyYWJiaXRtcSIsICJzY2hlbWUiOiAiYW1xcCIsICJwb3J0IjogNTY3Mn1dLCAiZGF0YWJhc2UiOiBbeyJ1c2VybmFtZSI6ICJ1c2VyIiwgInNjaGVtZSI6ICJteXNxbCIsICJzZXJ2aWNlIjogIm15c3FsIiwgImlwIjogIjI0OC4wLjE0NC4xMTEiLCAiY2x1c3RlciI6ICJ4ZjZwdGVhbXdpc3Z5LW1hc3RlciIsICJob3N0IjogImRhdGFiYXNlLmludGVybmFsIiwgInJlbCI6ICJteXNxbCIsICJwYXRoIjogIm1haW4iLCAicXVlcnkiOiB7ImlzX21hc3RlciI6IHRydWV9LCAicGFzc3dvcmQiOiAiIiwgInBvcnQiOiAzMzA2fV19
        # '{"APPLICATION_MODE":"developer"}'
        # - MAGENTO_CLOUD_VARIABLES=eyJBRE1JTl9FTUFJTCI6ImtiZW50cnVwQG1hZ2VudG8uY29tIiwiQVBQTElDQVRJT05fTU9ERSI6ImRldmVsb3BlciJ9Cg
        # '{"ADMIN_EMAIL":"kbentrup@magento.com","APPLICATION_MODE":"production"}'
        - MAGENTO_CLOUD_VARIABLES=eyJBRE1JTl9FTUFJTCI6ImtiZW50cnVwQG1hZ2VudG8uY29tIiwiQVBQTElDQVRJT05fTU9ERSI6InByb2R1Y3Rpb24ifQo
        # {"http:\\/\\/m2-b2b-dev.the1umastory.com\\/": {"type": "upstream","original_url": "http:\\/\\/{default}\\/"}}
        - MAGENTO_CLOUD_ROUTES=eyJodHRwOlwvXC9tMi1iMmItZGV2LnRoZTF1bWFzdG9yeS5jb21cLyI6IHsidHlwZSI6ICJ1cHN0cmVhbSIsIm9yaWdpbmFsX3VybCI6ICJodHRwOlwvXC97ZGVmYXVsdH1cLyJ9fQo
      env_file:
        - env/magento-cloud-variables.ini
      ports:
        - 80
      working_dir: /app
      volumes:
        # - ${HOME}/.composer:${HOME}/.composer
        - ./etc/cron.d/magento:/etc/cron.d/magento
        - ./etc/apache2/sites-enabled:/etc/apache2/sites-enabled
        # map php ini settings to cli and apache dirs
        - ./etc/php/7.0/templates:/etc/php/7.0/apache2/conf.d/templates
        - ./etc/php/7.0/apache2/conf.d/apache2.ini:/etc/php/7.0/apache2/conf.d/apache2.ini
        - ./etc/php/7.0/opcache.ini:/etc/php/7.0/apache2/conf.d/opcache.ini
        - ./etc/php/7.0/templates:/etc/php/7.0/cli/conf.d/templates
        - ./etc/php/7.0/cli/conf.d/cli.ini:/etc/php/7.0/cli/conf.d/cli.ini
        - ./etc/php/7.0/opcache.ini:/etc/php/7.0/cli/conf.d/opcache.ini
        - ./etc/blackfire/templates:/etc/blackfire/templates
        - ./scripts:/usr/local/bin
        - ../../../:/app
      networks:
        default:
          aliases:
            - m2-app-server.internal
      cap_add:
        - ALL
